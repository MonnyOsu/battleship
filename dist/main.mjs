(()=>{"use strict";const t=()=>[{id:1,name:"Aircraft Carrier",length:5,hitPoints:5,coordinates:[],hit(){this.hitPoints--},isSunk(){return 0===this.hitPoints}},{id:2,name:"Battleship",length:4,hitPoints:4,coordinates:[],hit(){this.hitPoints--},isSunk(){return 0===this.hitPoints}},{id:3,name:"Cruiser",length:3,hitPoints:3,coordinates:[],hit(){this.hitPoints--},isSunk(){return 0===this.hitPoints}},{id:4,name:"Submarine One",length:2,hitPoints:2,coordinates:[],hit(){this.hitPoints--},isSunk(){return 0===this.hitPoints}},{id:5,name:"Submarine Two",length:2,hitPoints:2,coordinates:[],hit(){this.hitPoints--},isSunk(){return 0===this.hitPoints}}],e=()=>{const t=["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],e=[],n=[],a=[];let i=0;function o(e,n){let a=!1;return+n+10*(e.length-1)<=100&&function(e,n){let a=0,i=n-1;for(;i<=+n+10*(e.length-1);)"x"!==t[i]&&a++,i+=10;return e.length<=a}(e,n)&&(a=!0),a}function s(e,n){let a=!1,i=10-(e.length-1);return+n<=i?a=!0:+n>i&&+n<=10||"0"===n.slice(1)||"00"===n.slice(1)?a=!1:n.slice(1)<=i&&function(e,n){let a=0,i=n-1;for(;i<+n+e.length-1;)"x"!==t[i]&&a++,i++;return e.length<=a}(e,n)&&(a=!0),a}function r(){let t=!1;return 1===i&&(t=!0),t}return{gameboard:t,placeShip:function(n,a,i){if(i&&s(n,a)){let i=a-1;for(;i<+a+n.length-1;)n.coordinates.push(t[i]),t[i]="x",i++;e.push(n)}if(!i&&o(n,a)){let i=a-1;for(;i<=+a+10*(n.length-1);)n.coordinates.push(t[i]),t[i]="x",i+=10;e.push(n)}},placeCpuShips:function(n){let a=0;for(;a<n.length;){let i=""+(Math.floor(100*Math.random())+1),r=Math.random()<.5;if(r&&s(n[a],i)){let o=i-1;for(;o<+i+n[a].length-1;)n[a].coordinates.push(t[o]),t[o]="x",o++;e.push(n[a]),a++}if(!r&&o(n[a],i)){let o=i-1;for(;o<=+i+10*(n[a].length-1);)n[a].coordinates.push(t[o]),t[o]="x",o+=10;e.push(n[a]),a++}}},receiveAttack:function(t){!function(t){for(let n of e){if(n.coordinates.includes(t)){if(a.includes(t))return;n.hit(),a.push(t),console.log("hit"),n.isSunk()&&i++}if(n.coordinates.includes(t))break}}(t),function(t){for(let i of e)if(!i.coordinates.includes(t)){if(n.includes(t))return;if(a.includes(t))return;console.log("miss"),n.push(t)}}(t),i>0&&console.log("ship has been sunk"),console.log(i),r()},isGameClear:r,cpuAttackGenerator:function(){let t=""+(Math.floor(100*Math.random())+1);return console.log(t),t},shipLocations:e,missedAttacks:n,hitAttacks:a,sunkShips:i}},n=document.querySelector(".player-docks"),a=document.querySelector(".ship-name"),i=document.querySelector("[data-player-gameboard]"),o=document.querySelector("[data-cpu-gameboard]");function s(t,e){n.removeChild(n.lastChild);let i=document.createElement("div");i.dataset.ship=t[e].name,i.dataset.length=t[e].length,i.classList.add("ship-wrapper"),i.classList.add("draggable"),i.setAttribute("draggable",!0);for(let n=0;n<t[e].length;n++){let t=document.createElement("span");t.classList.add("ship-span"),i.appendChild(t)}a.textContent=t[e].name,n.appendChild(i)}function r(t,e){t.forEach((t=>{e.missedAttacks.includes(t.dataset.coordinate)&&(t.classList.add("missed-attack"),t.textContent=".")}))}function d(t,e){t.forEach((t=>{e.hitAttacks.includes(t.dataset.coordinate)&&(t.classList.add("hit-attack"),t.textContent="X")}))}const c=document.querySelector(".rotate-button"),l=t(),h=t(),u=e(),g=e();let p=0,m=!0;!function(t){for(let e=0;e<=t.gameboard.length-1;e++){let n=document.createElement("div");n.dataset.coordinate=t.gameboard[e],n.classList.add("gameboard-div"),n.classList.add("player-gameboard-div"),i.appendChild(n)}}(u),function(t){for(let e=0;e<=t.gameboard.length-1;e++){let n=document.createElement("div");n.dataset.coordinate=t.gameboard[e],n.classList.add("gameboard-div"),n.classList.add("cpu-gameboard-div"),o.appendChild(n)}}(g),s(l,p);const f=document.querySelectorAll(".player-gameboard-div"),v=document.querySelectorAll(".cpu-gameboard-div"),L=document.querySelectorAll(".draggable");c.addEventListener("click",(()=>{var t;t=document.querySelector(".ship-wrapper"),m?(t.style.flexDirection="column",m=!1):(t.style.flexDirection="row",m=!0)})),L.forEach((t=>{t.addEventListener("dragstart",(()=>{t.classList.add("dragging")})),t.addEventListener("dragend",(()=>{t.classList.remove("dragging")}))})),f.forEach((t=>{t.addEventListener("dragover",(t=>{t.preventDefault(),t.target.classList.add("grid-hover")})),t.addEventListener("dragleave",(t=>{t.preventDefault(),t.target.classList.remove("grid-hover")})),t.addEventListener("drop",(t=>{t.preventDefault(),t.target.classList.remove("grid-hover");const e=t.target.dataset.coordinate;var n;u.placeShip(l[p],e,m),n=u,f.forEach((t=>{n.shipLocations.forEach((e=>{e.coordinates.includes(t.dataset.coordinate)&&t.classList.add("active-ship")}))})),u.shipLocations.length>p&&p++,p<=4&&(m=!0,s(l,p)),5===p&&(g.placeCpuShips(h),console.log(g),document.querySelector(".player-docks").style.display="none",document.querySelector("[data-cpu-gameboard]").style.display="grid")}))})),v.forEach((t=>{t.addEventListener("click",(t=>{let e=t.target.dataset.coordinate;g.receiveAttack(e),console.log(g),u.receiveAttack(u.cpuAttackGenerator()),console.log(u),d(f,u),d(v,g),r(v,g),r(f,u)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,